plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.eet'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ==== RUNTIME / APP ====
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	// JWT (en app principal)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ==== TESTING ====
	testImplementation 'org.springframework.boot:spring-boot-starter-test'    // JUnit 5 + AssertJ + Mockito core
	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'            // Extensión JUnit 5 de Mockito
	testImplementation 'org.springframework.security:spring-security-test'    // @WithMockUser, etc.
	testRuntimeOnly 'com.h2database:h2'                                       // BBDD en memoria para integración

	// Si vas a generar/verificar JWT reales dentro de los tests, añade impl/jackson también en test:
	testImplementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	testImplementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// (Opcional para ciertos IDEs; JUnit Platform launcher)
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
}
